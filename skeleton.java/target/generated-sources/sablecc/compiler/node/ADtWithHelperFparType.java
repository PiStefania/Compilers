/* This file was generated by SableCC (http://www.sablecc.org/). */

package compiler.node;

import compiler.analysis.*;

@SuppressWarnings("nls")
public final class ADtWithHelperFparType extends PFparType
{
    private PDataType _dataType_;
    private PFparTypeHelper2 _fparTypeHelper2_;

    public ADtWithHelperFparType()
    {
        // Constructor
    }

    public ADtWithHelperFparType(
        @SuppressWarnings("hiding") PDataType _dataType_,
        @SuppressWarnings("hiding") PFparTypeHelper2 _fparTypeHelper2_)
    {
        // Constructor
        setDataType(_dataType_);

        setFparTypeHelper2(_fparTypeHelper2_);

    }

    @Override
    public Object clone()
    {
        return new ADtWithHelperFparType(
            cloneNode(this._dataType_),
            cloneNode(this._fparTypeHelper2_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseADtWithHelperFparType(this);
    }

    public PDataType getDataType()
    {
        return this._dataType_;
    }

    public void setDataType(PDataType node)
    {
        if(this._dataType_ != null)
        {
            this._dataType_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._dataType_ = node;
    }

    public PFparTypeHelper2 getFparTypeHelper2()
    {
        return this._fparTypeHelper2_;
    }

    public void setFparTypeHelper2(PFparTypeHelper2 node)
    {
        if(this._fparTypeHelper2_ != null)
        {
            this._fparTypeHelper2_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._fparTypeHelper2_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._dataType_)
            + toString(this._fparTypeHelper2_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._dataType_ == child)
        {
            this._dataType_ = null;
            return;
        }

        if(this._fparTypeHelper2_ == child)
        {
            this._fparTypeHelper2_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._dataType_ == oldChild)
        {
            setDataType((PDataType) newChild);
            return;
        }

        if(this._fparTypeHelper2_ == oldChild)
        {
            setFparTypeHelper2((PFparTypeHelper2) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
