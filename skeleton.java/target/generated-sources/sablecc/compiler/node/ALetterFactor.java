/* This file was generated by SableCC (http://www.sablecc.org/). */

package compiler.node;

import compiler.analysis.*;

@SuppressWarnings("nls")
public final class ALetterFactor extends PFactor
{
    private TConstantCharacter _constantCharacter_;

    public ALetterFactor()
    {
        // Constructor
    }

    public ALetterFactor(
        @SuppressWarnings("hiding") TConstantCharacter _constantCharacter_)
    {
        // Constructor
        setConstantCharacter(_constantCharacter_);

    }

    @Override
    public Object clone()
    {
        return new ALetterFactor(
            cloneNode(this._constantCharacter_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseALetterFactor(this);
    }

    public TConstantCharacter getConstantCharacter()
    {
        return this._constantCharacter_;
    }

    public void setConstantCharacter(TConstantCharacter node)
    {
        if(this._constantCharacter_ != null)
        {
            this._constantCharacter_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._constantCharacter_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._constantCharacter_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._constantCharacter_ == child)
        {
            this._constantCharacter_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._constantCharacter_ == oldChild)
        {
            setConstantCharacter((TConstantCharacter) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
